<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atm.mapper.BlogCommentMapper">

  <cache />

  <select id="get" resultType="BlogComment">
    select blogcomment.*,
           user.name as username,
           user.photo as userphoto,
           follow.name as followname
      from blogcomment
           left join user
                  on user.id = blogcomment.userid
           left join user as follow
                  on follow.id = blogcomment.followid
     where blogcomment.id = #{id}
     limit 0, 1
  </select>

  <select id="list" resultType="BlogComment">
    select blogcomment.*,
           user.name as username,
           user.photo as userphoto,
           follow.name as followname
      from blogcomment
           left join user
                  on user.id = blogcomment.userid
           left join user as follow
                  on follow.id = blogcomment.followid
     where blogcomment.blogid = #{blogid}
  order by blogcomment.id desc
      <if test="start != null and num != null">
     limit #{start}, #{num}
      </if>
  </select>

  <insert id="insert" parameterType="BlogComment">
    insert
      into blogcomment
       set blogcomment.msg = #{msg},
           blogcomment.blogid = #{blogid},
           blogcomment.followid = #{followid},
           blogcomment.userid = #{userid},
      <if test="location != null">
           blogcomment.location = #{location},
      </if>
           blogcomment.uptime = now()
  </insert>

  <delete id="delete">
    delete
      from blogcomment
     where blogcomment.id = #{id}
  </delete>

  <delete id="clear">
    delete
      from blogcomment
     where blogcomment.blogid = #{blogid}
        or blogcomment.blogid in (
           select blog.id
             from blog
            where blog.refid = #{blogid} )
  </delete>
  
</mapper>
