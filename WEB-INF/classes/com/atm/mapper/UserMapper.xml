<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atm.mapper.UserMapper">

  <cache />

  <select id="get" resultType="User">
    select user.id,
           user.acc,
           user.pwd,
           user.avail,
           user.utype,
           user.name,
           user.num,
           user.schid,
           user.clzid,
           user.email,
           user.phone,
           user.photo
      from user
     where user.id = #{id}
     limit 0, 1
  </select>
  
  <select id="getByAcc" resultType="User">
    select user.id,
           user.acc,
           user.pwd,
           user.utype,
           user.avail,
           user.name,
           user.num,
           user.schid,
           user.clzid,
           user.email,
           user.phone,
           user.photo
      from user
     where user.acc = #{acc}
     limit 0, 1
  </select>

  <select id="getByEmail" resultType="User">
    select user.id,
           user.acc,
           user.pwd,
           user.utype,
           user.avail,
           user.name,
           user.num,
           user.schid,
           user.clzid,
           user.email,
           user.phone,
           user.photo
      from user
     where user.email = #{email}
     limit 0, 1
  </select>

  <select id="getByPhone" resultType="User">
    select user.id,
           user.acc,
           user.pwd,
           user.utype,
           user.avail,
           user.name,
           user.num,
           user.schid,
           user.clzid,
           user.email,
           user.phone,
           user.photo
      from user
     where user.phone = #{phone}
     limit 0, 1
  </select>

  <select id="getByAEP" resultType="User">
    select user.id,
           user.acc,
           user.pwd,
           user.utype,
           user.avail,
           user.name,
           user.num,
           user.schid,
           user.clzid,
           user.email,
           user.phone,
           user.photo
      from user
     where user.acc = #{aep}
        or user.email = #{aep}
        or user.phone = #{aep}
     limit 0, 1
  </select>

  <select id="countAcc" parameterType="User" resultType="Integer">
    select count(*)
      from user
     where user.acc = #{acc}
       and user.id != #{id}
  </select>

  <select id="countEmail" parameterType="User" resultType="Integer">
    select count(*)
      from user
     where user.email = #{email}
       and user.id != #{id}
  </select>

  <select id="countPhone" parameterType="User" resultType="Integer">
    select count(*)
      from user
     where user.phone = #{phone}
       and user.id != #{id}
  </select>
  
  <update id="changePwd">
    update user
       set user.pwd = #{pwd},
           user.token = ''
     where user.id = #{id}
  </update>
  
  <update id="active">
    update user
       set user.pwd = #{pwd},
           user.avail = 2,
           user.token = ''
     where user.id = #{id}
  </update>
  
  <select id="getToken" resultType="User">
    select user.id,
           user.avail,
           user.token,
           user.tokenuptime
      from user
     where user.email = #{email}
     limit 0, 1
  </select>
  
  <update id="updateToken">
    update user
       set user.token = #{token},
           user.tokenuptime = now()
     where user.id = #{id}
  </update>

  <insert id="insert" parameterType="User">
    insert
      into user
       set user.acc = #{acc},
           user.pwd = #{pwd},
           user.schid = #{schid},
           user.clzid = #{clzid},
      <choose>
        <when test="name == null">
           user.name = user.acc,
        </when>
        <otherwise>
           user.name = #{name},
        </otherwise>
      </choose>
      <if test="num != null">
           user.num = #{num},
      </if>
      <if test="email != null">
           user.email = #{email},
      </if>
      <if test="phone != null">
           user.phone = #{phone},
      </if>
           user.photo = #{photo},
           user.utype = #{utype},
           user.avail = #{avail},
           user.uptime = now()
  </insert>

</mapper>
